mr_load_c_function: 0x2ADA08  => 0x80000
mr_c_function: 0x2ADC6C, mr_c_function_P: 0x2AD048, len: 20

struct mr_c_function_P{
    0x0,  start_of_ER_RW
    0x4,  ER_RW_Length
    0x8,  ext_type
    0xC,  mrc_extChunk
    0x10,  stack
}


0x2875D0 _mr_c_function_table


mr_c_function_load(0); // 似乎传0返回的是mr_helper,传1返回的是mr_extHelper，未证实
int mr_c_function_load(int code){
    if(code == 1){

    }else{
       // sizeof(mr_c_function_P) = 0x14
       if(_mr_c_function_table._mr_c_function_new(mr_helper, sizeof(mr_c_function_P))  != -1){
           mr_c_function_P.ext_type = 0;
           mr_c_function_P.ER_RW_Length = mr_helper_get_rw_len();
           mr_c_function_P.start_of_ER_RW =  mrc_malloc(mr_c_function_P.ER_RW_Length);
           if(mr_c_function_P.start_of_ER_RW){
               _mr_c_function_table.memcpy(
                   mr_c_function_P.start_of_ER_RW,
                   mr_helper_get_ro_len() + mr_load_c_function,
                   mr_helper_get_rw_lenOnly()
               );
               _mr_c_function_table.memset(
                   mr_c_function_P.start_of_ER_RW + mr_helper_get_rw_lenOnly(),
                   0,
                   mr_c_function_P.ER_RW_Length - mr_helper_get_rw_lenOnly()
               );
               return 0;
           }
       }
    }
    return -1;
}

void *mrc_malloc(len){
    int v = len + 4;
    void *p = _mr_c_function_table.mr_malloc(v);
    if(p){
        *p = len;
        return p+1;
    }
    return p;
}
//RW：程序中已经初始化的变量所占空间
//ZI：未初始化的static变量和全局变量以及堆栈所占的空间
unsigned int mr_helper_get_rw_len() {
    return Image$$ER_RW$$Length + Image$$ER_ZI$$ZI$$Length;
}
unsigned int mr_helper_get_rw_lenOnly() {
    return Image$$ER_RW$$Length;
}
unsigned int mr_helper_get_ro_len() {
    return Image$$ER_RO$$Length;
}



0x2ADC6C mr_helper = mr_c_function
typedef struct {
    int32 id;
    int32 ver;
    char* sidName;
    int32 ram;
} mrc_appInfoSt_st;
mrc_appInfoSt_st mrc_appInfo_st;

_mr_TestComC(801, (char*)&mrc_appInfo_st, sizeof(mrc_appInfo_st), 8);
_mr_TestComC(801, filebuf, MR_VERSION, 0);

static int _mr_TestComC(int input0, char* input1, int32 len, int32 code) {
int32 output_len = 0;
uint8* output = NULL;
ret = mr_c_function(mr_c_function_P, code, (uint8*)input1, len, (uint8**)&output, &output_len);

int32 mr_helper(void* P, int32 code, uint8* input, int32 input_len, uint8** output, int32* output_len);

    r6 = mr_c_function_P
    r0 = mr_c_function_P.start_of_ER_RW
    r8 = input_len
    r7 = code
    r5 = r2 = input
    r4 = 0

    mov r10(sl), r9(sb)
    mr_helper_set_sb(mr_c_function_P.start_of_ER_RW)

    r0 = 4
    (r7 == 9)

    r0 = (sb+r0) = 0x2ad068

    switch(code){
        case 6:
            *(r0+0x1c) = len; //MR_VERSION
            break;
        case 8:
            *(r0+0x20) = input; // (char*)&mrc_appInfo_st
            break;
        case 0:
            r1 = mr_c_function_P.mrc_extChunk
            *(r0+0x14) = mr_c_function_P.mrc_extChunk;
            _mr_init_c_helper_function();
            // mrc_init 的地址是 0x2ADFE4
            ret = mrc_init();
            mrc_refreshScreenReal()
            _mr_c_function_table._mr_c_internal_table.mr_timer_p = "dealtimer"
            return ret;
            break;
    }

    mov r9(sb), r10(sl)
    return 0;


}

mr_helper_set_sb(v){
    r9 = v
    return v
}


==========================REG=================================
 R0=0x002AD068  R1=0x00000000    R2=0x002ADA00   R3=0x000007DB
 R4=0x00000000  R5=0x002ADA00    R6=0x002AD048   R7=0x00000000
 R8=0x000007DB  R9=0x002AD064   R10=0x00285900  R11=0x00000000
R12=0x002ADC6C  SP=0x0027FF68    LR=0x002ADCD8   PC=0x002ADB6C
==============================================================
_mr_init_c_helper_function(){
    mrc_timerInit();
    r4 = sb+4
    *(r4+0x18) = 1

    r0 = _mr_c_function_table
    *(r4+0x2c) = _mr_c_function_table.mr_printf
    *(r4+0x30) = _mr_c_function_table.memcpy
    *(r4+0x34) = _mr_c_function_table.memmove
    *(r4+0x38) = _mr_c_function_table.strcpy
    *(r4+0x3c) = _mr_c_function_table.strncpy
    *(r4+0x40) = _mr_c_function_table.strcat
    *(r4+0x44) = _mr_c_function_table.strncat
    *(r4+0x48) = _mr_c_function_table.memcmp
    *(r4+0x4c) = _mr_c_function_table.strcmp
    *(r4+0x50) = _mr_c_function_table.strncmp
    *(r4+0x54) = _mr_c_function_table.strcoll
    *(r4+0x58) = _mr_c_function_table.memchr
    *(r4+0x5c) = _mr_c_function_table.memset
    *(r4+0x60) = _mr_c_function_table.strlen
    *(r4+0x64) = _mr_c_function_table.strstr
    *(r4+0x68) = _mr_c_function_table.sprintf
    *(r4+0x6c) = _mr_c_function_table.atoi
    *(r4+0x70) = _mr_c_function_table.strtoul
    *(sb+0x100) = 0

    if(_mr_c_function_table._mr_TestCom(0, 7, 0x270f) = 0x270f){
        *(r4+0x28) = 0x270d
    }

}

mrc_timerInit(){
    r1 = sb+4
    *(r1+0x88) = 0
    *(r1+0x90) = 0
    *(r1+0x9c) = 0
}

mrc_init(){
0x2AE028
PC:0x2ADE2C 跳转到_DrawText时出错
0x85c08





}

mrc_clearScreen(){

}







































 