name: ARM64 Build for Emuelec4.7

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [aarch64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: StarCatL/vmrp
          submodules: true

      - name: Set up cross-compilation environment
        run: |
          # 添加ARM64架构支持
          sudo dpkg --add-architecture arm64
          
          # 配置ARM64源
          sudo tee /etc/apt/sources.list <<EOF
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy main restricted universe multiverse
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-updates main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-updates main restricted universe multiverse
          EOF
          
          # 安装基础工具链
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            libsdl2-dev:arm64 \
            zlib1g-dev:arm64 \
            make \
            wget \
            unzip \
            cmake

      - name: Build Unicorn Engine (aarch64)
        run: |
          # 下载Unicorn源码（2.1.3版本）
          wget https://github.com/unicorn-engine/unicorn/archive/refs/tags/2.1.3.tar.gz -O unicorn-2.1.3.tar.gz
          tar -zxf unicorn-2.1.3.tar.gz
          cd unicorn-2.1.3
          
          # 交叉编译配置
          mkdir build && cd build
          cmake .. \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
            -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
            -DCMAKE_INSTALL_PREFIX=/usr/aarch64-linux-gnu \
            -DBUILD_SHARED_LIBS=ON
          
          # 编译并安装
          make -j$(nproc)
          sudo make install
          cd ../..

      - name: Build Capstone (调试依赖)
        run: |
          wget https://github.com/aquynh/capstone/archive/refs/tags/4.0.2.tar.gz -O capstone-4.0.2.tar.gz
          tar -zxf capstone-4.0.2.tar.gz
          cd capstone-4.0.2
          
          # 交叉编译配置
          ./make.sh cross-compile aarch64-linux-gnu
          sudo make install PREFIX=/usr/aarch64-linux-gnu
          cd ..

      - name: Build mythroad module
        run: |
          cd mythroad
          make CC=aarch64-linux-gnu-gcc \
               AR=aarch64-linux-gnu-ar \
               LOCAL_CFLAGS="-march=armv8-a -I/usr/aarch64-linux-gnu/include" \
               LDFLAGS="-L/usr/aarch64-linux-gnu/lib" \
               full

      - name: Build main vmrp
        run: |
          make CC=aarch64-linux-gnu-gcc \
               CFLAGS="-march=armv8-a -DVMRP -I/usr/aarch64-linux-gnu/include" \
               LDFLAGS="-L/usr/aarch64-linux-gnu/lib -lSDL2 -lunicorn -lz -lm -lpthread" \
               DEBUG=0
          # 验证二进制架构
          file ./bin/vmrp

      - name: Prepare Portmaster package
        run: |
          mkdir -p vmrp-portmaster/{bin,lib,share}
          
          # 复制主程序
          cp ./bin/vmrp vmrp-portmaster/bin/
          
          # 复制依赖库（Portmaster未提供的部分）
          cp /usr/aarch64-linux-gnu/lib/libSDL2-2.0.so.0 vmrp-portmaster/lib/
          cp /usr/aarch64-linux-gnu/lib/libunicorn.so.2 vmrp-portmaster/lib/
          cp /usr/aarch64-linux-gnu/lib/libz.so.1 vmrp-portmaster/lib/
          
          # 创建Portmaster配置文件
          cat > vmrp-portmaster/portmaster.json <<EOF
          {
            "name": "vmrp",
            "version": "1.0",
            "author": "Your Name",
            "description": "MRP emulator for Emuelec",
            "architecture": "aarch64",
            "runtime": {
              "requires": ["mesa_pkg_0.1.squashfs", "weston_pkg_0.2.squashfs"]
            },
            "executable": "bin/vmrp",
            "args": []
          }
          EOF

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vmrp-emuelec-s905l3a
          path: vmrp-portmaster/
